<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/4/30
 * Time: 16:49
 */
namespace app\lib\exception;
use Exception;
use think\exception\Handle;
use think\facade\Config;
use think\facade\Log;
use think\facade\Request;
class ExceptionHandler extends Handle
{
    private $code;
    private $msg;
    private $errorCode;
    //还需要返回客户端当前请求的url路径

    //覆盖和重写掉tp的异常处理
    public function render(Exception $e)
    {
        //所有的代码抛出的异常都会通过这个render这个方法来渲染,最后来决定返回客户端
        //的是一个什么样形式的错误信息
        //return parent::render($ex); // TODO: Change the autogenerated stub
       if($e instanceof BaseException)
       {
           //如果是自定义的异常
            $this->code = $e->code;   //这个是获取到自定义异常的值进行赋值
            $this->msg = $e->msg;
            $this->errorCode = $e->errorCode;
       }else{
            if(Config::get('app_debug'))
            {
                return parent::render($e);
            }else{
                $this->code = 500;
                $this->msg = '服务器内部错误,不想告诉你';
                $this->errorCode = 999;
                $this->recordErrorLog($e);
            }
       }
       $result = [
           'msg' => $this->msg,
           'errorCode'  => $this->errorCode,
           'request_url' => Request::url()
       ];
       return json($result,$this->code);
    }

    private function recordErrorLog(Exception $e)
    {
        Log::init([
            'type' => 'File',
            'path' => '',
            'level' => ['error']
        ]);
        //第二个参数是自己来定义的,不一定叫error
        Log::record($e->getMessage(),'error');
    }
}